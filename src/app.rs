use crate::{list::StatefulList, model::StockDataWrapper, net};
use custom_widget::kline::klinedata::KlineData;
use std::error::Error;
use std::process::exit;

const K_LINE_DATAS: [KlineData; 10] = [
    KlineData {
        date: "2023-04-07",
        pre_close: 0.904,
        start: 0.902,
        end: 0.9,
        min: 0.894,
        max: 0.912,
        quantity: 7707861,
        amount: 695367487,
        up_rate: -0.44,
        cr: 5.52,
        avg5: 0.913,
        avg10: 0.908,
        avg20: 0.896,
        avg30: 0.905,
        avg_q5: 7832059.6,
        avg_q10: 7745399.3,
    },
    KlineData {
        date: "2023-04-06",
        pre_close: 0.925,
        start: 0.919,
        end: 0.904,
        min: 0.901,
        max: 0.924,
        quantity: 9696261,
        amount: 882304612,
        up_rate: -2.27,
        cr: 7.09,
        avg5: 0.918,
        avg10: 0.907,
        avg20: 0.896,
        avg30: 0.906,
        avg_q5: 8430439.4,
        avg_q10: 7741763.7,
    },
    KlineData {
        date: "2023-04-04",
        pre_close: 0.918,
        start: 0.917,
        end: 0.925,
        min: 0.908,
        max: 0.927,
        quantity: 7859473,
        amount: 721215918,
        up_rate: 0.76,
        cr: 5.84,
        avg5: 0.919,
        avg10: 0.905,
        avg20: 0.896,
        avg30: 0.908,
        avg_q5: 8482574.0,
        avg_q10: 7349595.0,
    },
    KlineData {
        date: "2023-04-03",
        pre_close: 0.92,
        start: 0.919,
        end: 0.918,
        min: 0.908,
        max: 0.926,
        quantity: 7270993,
        amount: 667282577,
        up_rate: -0.22,
        cr: 5.48,
        avg5: 0.915,
        avg10: 0.901,
        avg20: 0.895,
        avg30: 0.908,
        avg_q5: 8227942.0,
        avg_q10: 7143790.0,
    },
    KlineData {
        date: "2023-03-31",
        pre_close: 0.924,
        start: 0.927,
        end: 0.92,
        min: 0.919,
        max: 0.939,
        quantity: 6625710,
        amount: 614690930,
        up_rate: -0.43,
        cr: 5.03,
        avg5: 0.908,
        avg10: 0.895,
        avg20: 0.896,
        avg30: 0.91,
        avg_q5: 8002961.8,
        avg_q10: 6914536.8,
    },
    KlineData {
        date: "2023-03-30",
        pre_close: 0.912,
        start: 0.911,
        end: 0.924,
        min: 0.905,
        max: 0.926,
        quantity: 10699760,
        amount: 981583942,
        up_rate: 1.32,
        cr: 8.38,
        avg5: 0.903,
        avg10: 0.89,
        avg20: 0.896,
        avg30: 0.91,
        avg_q5: 7658739.0,
        avg_q10: 6888259.8,
    },
    KlineData {
        date: "2023-03-29",
        pre_close: 0.903,
        start: 0.908,
        end: 0.912,
        min: 0.898,
        max: 0.914,
        quantity: 9956934,
        amount: 905336307,
        up_rate: 1.0,
        cr: 8.02,
        avg5: 0.896,
        avg10: 0.886,
        avg20: 0.897,
        avg30: 0.911,
        avg_q5: 7053088.0,
        avg_q10: 6280812.7,
    },
    KlineData {
        date: "2023-03-28",
        pre_close: 0.884,
        start: 0.886,
        end: 0.903,
        min: 0.886,
        max: 0.906,
        quantity: 6586313,
        amount: 592204257,
        up_rate: 2.15,
        cr: 5.3,
        avg5: 0.89,
        avg10: 0.883,
        avg20: 0.899,
        avg30: 0.912,
        avg_q5: 6216616.0,
        avg_q10: 5766302.5,
    },
    KlineData {
        date: "2023-03-27",
        pre_close: 0.892,
        start: 0.894,
        end: 0.884,
        min: 0.88,
        max: 0.895,
        quantity: 6146092,
        amount: 544528410,
        up_rate: -0.9,
        cr: 5.04,
        avg5: 0.887,
        avg10: 0.882,
        avg20: 0.9,
        avg30: 0.914,
        avg_q5: 6059638.0,
        avg_q10: 5723955.8,
    },
    KlineData {
        date: "2023-03-24",
        pre_close: 0.892,
        start: 0.892,
        end: 0.892,
        min: 0.885,
        max: 0.903,
        quantity: 4904596,
        amount: 438682091,
        up_rate: 0.0,
        cr: 4.01,
        avg5: 0.881,
        avg10: 0.884,
        avg20: 0.902,
        avg30: 0.916,
        avg_q5: 5826111.8,
        avg_q10: 5642290.3,
    },
    // KlineData {
    //     date: "2023-03-23",
    //     pre_close: 0.882,
    //     start: 0.878,
    //     end: 0.892,
    //     min: 0.876,
    //     max: 0.902,
    //     quantity: 7671505,
    //     amount: 685137406,
    //     up_rate: 1.13,
    //     cr: 6.42,
    //     avg5: 0.877,
    //     avg10: 0.884,
    //     avg20: 0.904,
    //     avg30: 0.917,
    //     avg_q5: 6117780.6,
    //     avg_q10: 5778471.4,
    // },
    // KlineData {
    //     date: "2023-03-22",
    //     pre_close: 0.886,
    //     start: 0.888,
    //     end: 0.882,
    //     min: 0.88,
    //     max: 0.9,
    //     quantity: 5774574,
    //     amount: 514530565,
    //     up_rate: -0.45,
    //     cr: 4.91,
    //     avg5: 0.875,
    //     avg10: 0.884,
    //     avg20: 0.906,
    //     avg30: 0.917,
    //     avg_q5: 5508537.4,
    //     avg_q10: 5637894.8,
    // },
    // KlineData {
    //     date: "2023-03-21",
    //     pre_close: 0.857,
    //     start: 0.861,
    //     end: 0.886,
    //     min: 0.856,
    //     max: 0.889,
    //     quantity: 5801423,
    //     amount: 508519858,
    //     up_rate: 3.38,
    //     cr: 4.93,
    //     avg5: 0.876,
    //     avg10: 0.887,
    //     avg20: 0.909,
    //     avg30: 0.917,
    //     avg_q5: 5315989.0,
    //     avg_q10: 5512129.3,
    // },
    // KlineData {
    //     date: "2023-03-20",
    //     pre_close: 0.869,
    //     start: 0.868,
    //     end: 0.857,
    //     min: 0.851,
    //     max: 0.87,
    //     quantity: 4978461,
    //     amount: 427600921,
    //     up_rate: -1.38,
    //     cr: 4.23,
    //     avg5: 0.878,
    //     avg10: 0.89,
    //     avg20: 0.912,
    //     avg30: 0.918,
    //     avg_q5: 5388273.6,
    //     avg_q10: 5363985.6,
    // },
    // KlineData {
    //     date: "2023-03-17",
    //     pre_close: 0.883,
    //     start: 0.891,
    //     end: 0.869,
    //     min: 0.865,
    //     max: 0.893,
    //     quantity: 6362940,
    //     amount: 558126716,
    //     up_rate: -1.59,
    //     cr: 5.41,
    //     avg5: 0.887,
    //     avg10: 0.897,
    //     avg20: 0.917,
    //     avg30: 0.919,
    //     avg_q5: 5458468.8,
    //     avg_q10: 5360378.7,
    // },
    // KlineData {
    //     date: "2023-03-16",
    //     pre_close: 0.885,
    //     start: 0.881,
    //     end: 0.883,
    //     min: 0.876,
    //     max: 0.897,
    //     quantity: 4625289,
    //     amount: 409600450,
    //     up_rate: -0.23,
    //     cr: 3.93,
    //     avg5: 0.89,
    //     avg10: 0.903,
    //     avg20: 0.921,
    //     avg30: 0.92,
    //     avg_q5: 5439162.2,
    //     avg_q10: 5355412.8,
    // },
    // KlineData {
    //     date: "2023-03-15",
    //     pre_close: 0.896,
    //     start: 0.905,
    //     end: 0.885,
    //     min: 0.883,
    //     max: 0.907,
    //     quantity: 4811832,
    //     amount: 429100589,
    //     up_rate: -1.23,
    //     cr: 4.09,
    //     avg5: 0.894,
    //     avg10: 0.909,
    //     avg20: 0.924,
    //     avg30: 0.921,
    //     avg_q5: 5767252.2,
    //     avg_q10: 5355956.4,
    // },
    // KlineData {
    //     date: "2023-03-14",
    //     pre_close: 0.904,
    //     start: 0.905,
    //     end: 0.896,
    //     min: 0.886,
    //     max: 0.907,
    //     quantity: 6162846,
    //     amount: 552556445,
    //     up_rate: -0.88,
    //     cr: 5.24,
    //     avg5: 0.898,
    //     avg10: 0.914,
    //     avg20: 0.927,
    //     avg30: 0.922,
    //     avg_q5: 5708269.6,
    //     avg_q10: 5424816.0,
    // },
    // KlineData {
    //     date: "2023-03-13",
    //     pre_close: 0.886,
    //     start: 0.888,
    //     end: 0.904,
    //     min: 0.887,
    //     max: 0.91,
    //     quantity: 5329437,
    //     amount: 481448466,
    //     up_rate: 2.03,
    //     cr: 4.53,
    //     avg5: 0.902,
    //     avg10: 0.918,
    //     avg20: 0.929,
    //     avg30: 0.922,
    //     avg_q5: 5339697.6,
    //     avg_q10: 5227113.7,
    // },
    // KlineData {
    //     date: "2023-03-10",
    //     pre_close: 0.9,
    //     start: 0.892,
    //     end: 0.886,
    //     min: 0.886,
    //     max: 0.907,
    //     quantity: 6266407,
    //     amount: 559255785,
    //     up_rate: -1.56,
    //     cr: 5.33,
    //     avg5: 0.907,
    //     avg10: 0.921,
    //     avg20: 0.932,
    //     avg30: 0.922,
    //     avg_q5: 5262288.6,
    //     avg_q10: 5186664.2,
    // },
    // KlineData {
    //     date: "2023-03-09",
    //     pre_close: 0.908,
    //     start: 0.907,
    //     end: 0.9,
    //     min: 0.886,
    //     max: 0.912,
    //     quantity: 6265739,
    //     amount: 563248884,
    //     up_rate: -0.88,
    //     cr: 5.33,
    //     avg5: 0.916,
    //     avg10: 0.924,
    //     avg20: 0.933,
    //     avg30: 0.923,
    //     avg_q5: 5271663.4,
    //     avg_q10: 5168248.6,
    // },
    // KlineData {
    //     date: "2023-03-08",
    //     pre_close: 0.913,
    //     start: 0.908,
    //     end: 0.908,
    //     min: 0.902,
    //     max: 0.919,
    //     quantity: 4516919,
    //     amount: 410026909,
    //     up_rate: -0.55,
    //     cr: 3.84,
    //     avg5: 0.924,
    //     avg10: 0.927,
    //     avg20: 0.934,
    //     avg30: 0.924,
    //     avg_q5: 4944660.6,
    //     avg_q10: 5158585.8,
    // },
    // KlineData {
    //     date: "2023-03-07",
    //     pre_close: 0.931,
    //     start: 0.928,
    //     end: 0.913,
    //     min: 0.912,
    //     max: 0.932,
    //     quantity: 4319986,
    //     amount: 398420182,
    //     up_rate: -1.93,
    //     cr: 3.67,
    //     avg5: 0.93,
    //     avg10: 0.931,
    //     avg20: 0.933,
    //     avg30: 0.924,
    //     avg_q5: 5141362.4,
    //     avg_q10: 5180684.2,
    // },
    // KlineData {
    //     date: "2023-03-06",
    //     pre_close: 0.931,
    //     start: 0.931,
    //     end: 0.931,
    //     min: 0.918,
    //     max: 0.94,
    //     quantity: 4942392,
    //     amount: 459596579,
    //     up_rate: 0.0,
    //     cr: 4.2,
    //     avg5: 0.934,
    //     avg10: 0.934,
    //     avg20: 0.931,
    //     avg30: 0.924,
    //     avg_q5: 5114529.8,
    //     avg_q10: 5334560.8,
    // },
    // KlineData {
    //     date: "2023-03-03",
    //     pre_close: 0.938,
    //     start: 0.942,
    //     end: 0.931,
    //     min: 0.926,
    //     max: 0.95,
    //     quantity: 6313281,
    //     amount: 590715520,
    //     up_rate: -0.75,
    //     cr: 5.37,
    //     avg5: 0.934,
    //     avg10: 0.937,
    //     avg20: 0.929,
    //     avg30: 0.924,
    //     avg_q5: 5111039.8,
    //     avg_q10: 5578992.1,
    // },
    // KlineData {
    //     date: "2023-03-02",
    //     pre_close: 0.941,
    //     start: 0.94,
    //     end: 0.938,
    //     min: 0.935,
    //     max: 0.943,
    //     quantity: 4630725,
    //     amount: 434331820,
    //     up_rate: -0.32,
    //     cr: 3.94,
    //     avg5: 0.932,
    //     avg10: 0.938,
    //     avg20: 0.928,
    //     avg30: 0.924,
    //     avg_q5: 5064833.8,
    //     avg_q10: 5807404.7,
    // },
    // KlineData {
    //     date: "2023-03-01",
    //     pre_close: 0.931,
    //     start: 0.932,
    //     end: 0.941,
    //     min: 0.923,
    //     max: 0.945,
    //     quantity: 5500428,
    //     amount: 515238784,
    //     up_rate: 0.97,
    //     cr: 4.68,
    //     avg5: 0.931,
    //     avg10: 0.939,
    //     avg20: 0.927,
    //     avg30: 0.923,
    //     avg_q5: 5372511.0,
    //     avg_q10: 6167042.2,
    // },
    // KlineData {
    //     date: "2023-02-28",
    //     pre_close: 0.932,
    //     start: 0.934,
    //     end: 0.932,
    //     min: 0.922,
    //     max: 0.939,
    //     quantity: 4185823,
    //     amount: 389151816,
    //     up_rate: 0.0,
    //     cr: 3.56,
    //     avg5: 0.932,
    //     avg10: 0.94,
    //     avg20: 0.925,
    //     avg30: 0.921,
    //     avg_q5: 5220006.0,
    //     avg_q10: 6409298.2,
    // },
    // KlineData {
    //     date: "2023-02-27",
    //     pre_close: 0.92,
    //     start: 0.913,
    //     end: 0.932,
    //     min: 0.911,
    //     max: 0.937,
    //     quantity: 4924942,
    //     amount: 456116844,
    //     up_rate: 1.3,
    //     cr: 4.19,
    //     avg5: 0.935,
    //     avg10: 0.941,
    //     avg20: 0.923,
    //     avg30: 0.92,
    //     avg_q5: 5554591.8,
    //     avg_q10: 6416377.8,
    // },
    // KlineData {
    //     date: "2023-02-24",
    //     pre_close: 0.933,
    //     start: 0.933,
    //     end: 0.92,
    //     min: 0.911,
    //     max: 0.933,
    //     quantity: 6082251,
    //     amount: 559131235,
    //     up_rate: -1.39,
    //     cr: 5.17,
    //     avg5: 0.94,
    //     avg10: 0.943,
    //     avg20: 0.923,
    //     avg30: 0.919,
    //     avg_q5: 6046944.4,
    //     avg_q10: 6875704.7,
    // },
    // KlineData {
    //     date: "2023-02-23",
    //     pre_close: 0.944,
    //     start: 0.944,
    //     end: 0.933,
    //     min: 0.927,
    //     max: 0.95,
    //     quantity: 6169111,
    //     amount: 576447366,
    //     up_rate: -1.17,
    //     cr: 5.25,
    //     avg5: 0.944,
    //     avg10: 0.943,
    //     avg20: 0.923,
    //     avg30: 0.918,
    //     avg_q5: 6549975.6,
    //     avg_q10: 6894120.7,
    // },
    // KlineData {
    //     date: "2023-02-22",
    //     pre_close: 0.946,
    //     start: 0.941,
    //     end: 0.944,
    //     min: 0.936,
    //     max: 0.957,
    //     quantity: 4737903,
    //     amount: 448506255,
    //     up_rate: -0.21,
    //     cr: 4.03,
    //     avg5: 0.947,
    //     avg10: 0.941,
    //     avg20: 0.922,
    //     avg30: 0.916,
    //     avg_q5: 6961573.4,
    //     avg_q10: 7324302.6,
    // },
    // KlineData {
    //     date: "2023-02-21",
    //     pre_close: 0.96,
    //     start: 0.96,
    //     end: 0.946,
    //     min: 0.939,
    //     max: 0.96,
    //     quantity: 5858752,
    //     amount: 554171051,
    //     up_rate: -1.46,
    //     cr: 4.98,
    //     avg5: 0.948,
    //     avg10: 0.934,
    //     avg20: 0.92,
    //     avg30: 0.913,
    //     avg_q5: 7598590.4,
    //     avg_q10: 7421566.5,
    // },
];

pub struct StockBriefInfo<'a> {
    pub stock_name: &'a str,
    pub stock_code: &'a str,
    pub stock_code_num: i32,
    pub stock_data: Option<StockDataWrapper>,
}

impl StockBriefInfo<'_> {
    pub async fn get_stock_datas(&self) -> Result<StockDataWrapper, Box<dyn Error>> {
        let stock_data = net::get_stock_datas(self.stock_code_num).await?;
        Ok(stock_data)
    }
}

pub struct App<'a> {
    pub stock_ids: StatefulList<StockBriefInfo<'a>>,
    pub k_line_datas: Vec<KlineData<'a>>,
}

impl<'a> App<'a> {
    pub fn new() -> App<'a> {
        App {
            stock_ids: StatefulList::with_items(vec![
                StockBriefInfo {
                    stock_name: "酒ETF",
                    stock_code: "SH512690",
                    stock_code_num: 512690,
                    stock_data: None,
                },
                StockBriefInfo {
                    stock_name: "新能源车ETF",
                    stock_code: "SH515030",
                    stock_code_num: 515030,
                    stock_data: None,
                },
                StockBriefInfo {
                    stock_name: "钢铁ETF",
                    stock_code: "SH515210",
                    stock_code_num: 515210,
                    stock_data: None,
                },
                StockBriefInfo {
                    stock_name: "地产ETF",
                    stock_code: "SZ159707",
                    stock_code_num: 159707,
                    stock_data: None,
                },
                StockBriefInfo {
                    stock_name: "创业板ETF",
                    stock_code: "SZ159915",
                    stock_code_num: 159915,
                    stock_data: None,
                },
            ]),
            k_line_datas: K_LINE_DATAS.to_vec(),
        }
    }

    pub fn on_key(&mut self, i: char) {
        match i {
            'i' => {
                // input
                log::info!("input")
            }
            'q' => {
                // quit
                self.stock_ids.unselect();
                exit(0)
            }
            _ => {}
        }
    }

    pub fn on_left(&self) {}

    pub fn on_up(&mut self) {
        self.stock_ids.previous();
    }

    pub fn on_right(&self) {}

    pub fn on_bottom(&mut self) {
        self.stock_ids.next();
    }

    pub fn selected_item_brief_info(&self) -> &StockBriefInfo {
        let i = match self.stock_ids.state.selected() {
            Some(i) => i,
            None => 0,
        };
        &self.stock_ids.items[i]
    }

    pub fn get_x_bounds(&self) -> [f64; 2] {
        let min = -0.05;
        let max = self.k_line_datas.capacity() as f64;
        [min, max]
    }

    pub fn get_y_bounds(&self) -> [f64; 2] {
        let mut min = f64::MAX;
        let mut max = f64::MIN;
        for k_line_data in &self.k_line_datas {
            if min > k_line_data.min {
                min = k_line_data.min;
            }
            if max < k_line_data.max {
                max = k_line_data.max
            }
        }
        [min, max]
    }

    pub fn get_start_x_label(&self) -> &str {
        self.k_line_datas.last().unwrap().date
    }

    pub fn get_center_x_label(&self) -> &str {
        self.k_line_datas[self.k_line_datas.capacity() / 2].date
    }

    pub fn get_end_x_label(&self) -> &str {
        self.k_line_datas.first().unwrap().date
    }

    pub fn get_center_y_label(&self) -> f64 {
        let bounds = self.get_y_bounds();
        (bounds[0] + bounds[1]) / 2.0
    }
}
